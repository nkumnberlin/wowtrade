---
import resolveCookie from "../../../../utils/resolveCookie"
import Layout from "../../../components/global/Layout/Layout.astro"
import Error from "./error.astro"
const cookie = resolveCookie(Astro.cookies.get("wow-trade-session").value)
import { createOrder } from "@/order"
import { orderDuration } from "../../../api/order/createOrderMapper"
import { OrderData } from "../../../api/order/types"

const getSearchParamString = (param: string) =>
	Astro.url.searchParams.get(param)
const getSearchParamNumber = (param: string) =>
	parseInt(getSearchParamString(param), 10)

const createListingData: OrderData = {
	difficulty: getSearchParamNumber("difficulty"),
	quality: getSearchParamString("quality"),
	qualifiedCharacterName: getSearchParamString("qualifiedCharacterName"),
	creatorAccountId: 0,
	profession: getSearchParamString("profession"),
	currentSkill: getSearchParamNumber("currentSkill"),
	commission: {
		gold: getSearchParamNumber("gold"),
		silver: getSearchParamNumber("silver")
	},
	orderDuration: orderDuration(getSearchParamString("duration")),
	item: {
		id_crafted_item: getSearchParamNumber("id_crafted_item"),
		item_name: getSearchParamString("item_name")
	},
	qualityProcChance: getSearchParamNumber("qualityProcChance"),
	multicraftPercentage: getSearchParamNumber("multicraftPercentage")
}
let response = null
try {
	console.log("es geht ab create order")
	response = await createOrder(createListingData)
} catch (e) {
	console.log("fetch failed", e)
}
if (response?.acknowledged) {
	return Astro.redirect("/authenticated/orders/view")
}
//on success redirect to view
---

<Layout title="Create order">
	<section class="p-6 flex-1 flex flex-col justify-between">
		<div
			class="max-w-xl mx-auto flex flex-col justify-center flex-1 space-y-10"
		>
			{response?.message ?? <Error message={response?.message} />}
		</div>
	</section>
</Layout>
